- name : Shipping component
  hosts: shipping
  become: true
  vars:
    mysql_password: RoboShop@1
  tasks:
  - name: Installing Maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: Creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download application to app directory
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: Extract Catalogue application
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name:  Install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app  

  - name: Copy Catalogue service
    ansible.builtin.copy:
      src: shipping.service 
      dest: /etc/systemd/system/shipping.service

  - name: Daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true     

  - name: Install mqsql client
    ansible.builtin.dnf:
      name: mysql
      state: present

  - name: check cities schema exists or not
    ansible.builtin.command:  mysql -h mysql.practiceazure.com -uroot -p{{ mysql_password }} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

  - name: print output
    ansible.builtin.debug:
      msg: "schema output: {{schema}}"

  - name: load cities data
    ansible.builtin.shell: "mysql -h mysql.practiceazure.com -uroot -p{{ mysql_password }}  < /app/schema/shipping.sql"
    when: schema.stdout != "1"        

  - name: start and enable catalogue
    ansible.builtin.service:
      name: mysql
      state: restarted
      enabled: yes  



